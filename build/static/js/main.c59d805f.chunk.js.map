{"version":3,"sources":["components/Status.module.css","components/ChartModal.jsx","components/StockRow.jsx","components/Modal.jsx","components/StockTable.jsx","components/Header.jsx","components/Status.jsx","components/Gainers.jsx","components/Losers.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ChartModal","setShowChartModal","symbol","className","onClick","widgetProps","StockRow","useState","showChartModal","response","setResponse","fetchData","a","fetch","res","json","console","error","useEffect","interval","setInterval","clearInterval","override","css","data","replaceAll","companyName","lastPrice","pChange","change","lastUpdateTime","substring","type","colSpan","color","loading","size","Modal","stocks","setStocks","showModal","setShowModal","setError","exists","setExists","handleSubmit","e","preventDefault","FormData","target","localStocks","JSON","parse","sessionStorage","getItem","stockSymbol","get","toUpperCase","ok","undefined","find","x","name","singleStock","push","setItem","stringify","window","location","reload","newModalClick","onSubmit","htmlFor","id","autoComplete","StockTable","scope","map","item","navigation","href","current","Header","inactiveStyle","activeStyle","as","open","Button","src","alt","to","isActive","format","ticking","style","Panel","Status","then","resp","status","styles","statusOpen","statusClosed","Gainers","encodeURIComponent","Losers","log","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c59d805f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusOpen\":\"Status_statusOpen__JqIj9\",\"statusClosed\":\"Status_statusClosed__KNGyw\"};","import { AdvancedChart } from \"react-tradingview-embed\";\r\n/**\r\n * \r\n * \r\n */\r\n\r\nconst ChartModal = ({ setShowChartModal, symbol }) => {\r\n    // const [showModal, setShowModal] = useState(false);\r\n    //const [input, setInput] = useState('');\r\n    // const [error, setError] = useState(false);\r\n    // const [exists, setExists] = useState(false);\r\n\r\n    // const handleSubmit = async (e) => {\r\n    //     setError(false);\r\n    //     setExists(false);\r\n    //     e.preventDefault();\r\n    //     const data = new FormData(e.target);\r\n    //     //setInput(`${data.get('symbol')}`)\r\n    //     let stockSymbol = data.get('symbol').toUpperCase();\r\n    //     const res = await fetch(`http://localhost:5000/nse/get_quote_info?companyName=${data.get('symbol')}`)\r\n    //         if(res.ok===true) {\r\n    //             if((stocks.find(x => x.name === stockSymbol)===undefined)) {\r\n    //                 setStocks([\r\n    //                     ...stocks,\r\n    //                     {\r\n    //                         name: stockSymbol\r\n    //                     }\r\n    //                 ]);\r\n    //                 setShowModal(false);\r\n    //             } else {\r\n    //                 setExists(true);\r\n    //             }\r\n    //             setError(false);\r\n    //         } else {\r\n    //             setExists(false);\r\n    //             setError(true);\r\n    //         }\r\n\r\n    //     // setInput(e.target.value);\r\n    //     // stocks.push({ name: `${data.get('symbol')}`})\r\n    // }\r\n    // const newModalClick = async (e) => {\r\n    //     e.preventDefault();\r\n    //     setShowModal(true);\r\n    //     setError(false);\r\n    //     setExists(false);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\"\r\n            >\r\n                <div className=\"relative my-6 mx-auto\">\r\n                    {/*content*/}\r\n                    <div className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\r\n                        {/*header*/}\r\n                            <div className=\"flex items-start justify-between p-2 border-b border-solid border-blueGray-200 rounded-t\">\r\n                                    <button\r\n                                        className=\"p-1 ml-auto bg-transparent border-0 text-black opacity-80 float-right text-3xl leading-none font-semibold outline-none focus:outline-none\"\r\n                                        onClick={() => setShowChartModal(false)}\r\n                                    >\r\n                                        <span className=\"bg-transparent text-black opacity-50 h-6 w-6 text-2xl block outline-none focus:outline-none\">\r\n                                            ×\r\n                                        </span>\r\n                                    </button>\r\n                                </div> \r\n                        {/*body*/}\r\n                        <div className=\"relative p-5 flex-auto\">\r\n                            <AdvancedChart widgetProps={{\r\n                                \"width\": \"calc(90vw)\",\r\n                                \"height\": \"700px\",\r\n                                \"theme\": \"light\",\r\n                                \"symbol\": `BSE:${symbol}`,\r\n                                \"timezone\": \"Asia/Kolkata\",\r\n                                \"style\": \"1\",\r\n                                \"range\": \"YTD\",\r\n                                \"interval\": \"D\",\r\n                                \"locale\": \"in\",\r\n                                \"allow_symbol_change\": false\r\n                            }}/>\r\n                        </div>\r\n                        {/*footer*/}\r\n                        {/* <div className=\"flex items-center justify-end p-4 border-t border-solid border-blueGray-200 rounded-b\">\r\n                            <button\r\n                                className=\"bg-white focus:bg-gray-100 text-gray-500 focus:ring-4 focus:ring-gray-300 background-transparent rounded-lg border border-gray-200 uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                                type=\"button\"\r\n                                onClick={() => setShowChartModal(false)}\r\n                            >\r\n                                Close\r\n                            </button>\r\n                        </div> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default ChartModal;","import { useState, useEffect } from 'react';\r\nimport { css } from \"@emotion/react\";\r\nimport ChartModal from \"./ChartModal\"\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport { BiLineChart } from 'react-icons/bi'\r\n// import { HiOutlineTrash } from 'react-icons/hi'\r\n// import { IconContext } from \"react-icons\";\r\n\r\nconst StockRow = ({ symbol }) => {\r\n\r\n    const [showChartModal, setShowChartModal] = useState(false);\r\n    const [response, setResponse] = useState({});\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const res = await fetch(`http://localhost:5000/nse/get_quote_info?companyName=${symbol}`)\r\n            setResponse(await res.json());\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n\r\n    //     const intervalId = setInterval(() => {\r\n    //         fetch(`http://localhost:5000/nse/get_quote_info?companyName=${props.symbol}`)\r\n    //             .then(resp => resp.json())\r\n    //             .then(data => {\r\n    //                 setResponse(data)\r\n    //             })\r\n    //     }, 5000)\r\n\r\n    //     return () => clearInterval(intervalId);\r\n    // }, []);\r\n\r\n    // useEffect(() => {\r\n    //     fetch(`http://localhost:5000/nse/get_quote_info?companyName=${props.symbol}`)\r\n    //         .then(resp => resp.json())\r\n    //         .then(data => {\r\n    //             setResponse(data)\r\n    //         })\r\n    // }, [])\r\n    // const getData = () => {\r\n    //     fetchData();\r\n    //     setInterval(async ()=>{\r\n    //         fetchData();\r\n    //     } ,30000)\r\n    // }\r\n\r\n\r\n    // Fetches data on first render\r\n    useEffect(() => { \r\n        fetchData();\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    //Fetches data after the first render, every 60 seconds\r\n    useEffect(() => {\r\n        let interval = setInterval(fetchData, 60000);\r\n        return () => clearInterval(interval);\r\n    });\r\n\r\n    const override = css`\r\n        display: block;\r\n        text-align: center;\r\n        margin: 0 auto;\r\n        border-color: red;\r\n    `;\r\n\r\n    return (\r\n        <>\r\n            {response.data ?\r\n                <>\r\n                    <tr>\r\n                        <td className=\"px-2 py-4 whitespace-nowrap\">\r\n                            <div className=\"flex items-center\">\r\n                                <div className=\"ml-4\">\r\n                                    <div className=\"text-sm font-medium text-gray-900\">\r\n                                        {(response.data?.[0].symbol).replaceAll('&amp;', '&')}\r\n\r\n                                    </div>\r\n                                    <div className=\"text-sm text-gray-500\">\r\n                                        {response.data?.[0].companyName}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                            <div className=\"text-sm text-gray-900\">\r\n                                {response.data?.[0].lastPrice}\r\n                            </div>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                            <div className={(response.data?.[0].pChange > 0) ? 'text-sm text-green-600' :\r\n                                (response.data?.[0].pChange === 0.00) ? 'text-sm text-gray-500' : 'text-sm text-red-600'}>\r\n                                {(response.data?.[0].change) === '-' ? <>0.00</> : response.data?.[0].change}\r\n                                <span className='text-xs ml-1'>({response.data?.[0].pChange}%)</span>\r\n                            </div>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                            <div className=\"text-sm text-gray-900\">\r\n                                {response.lastUpdateTime?.substring(0, 11)}\r\n                            </div>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                            {response.lastUpdateTime?.substring(12)}\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                            <button\r\n                                className=\"flex py-1 text-white bg-gray-600 border-0 px-2 focus:outline-none text-lg focus:ring-3 focus:ring-gray-300 ease-linear transition-all duration-150\"\r\n                                type=\"button\"\r\n                                onClick={() => setShowChartModal(true)}\r\n                            >\r\n                                <BiLineChart /> <span className=\"text-sm ml-1\">Chart</span>\r\n                            </button>\r\n                        </td>\r\n                        {/* <td>\r\n                            <IconContext.Provider value={{ color: \"rgb(235, 46, 46)\", size: \"1.25em\"}}>\r\n                                <HiOutlineTrash onClick={()=> removeStock()}/>\r\n                            </IconContext.Provider>\r\n                        </td> */}\r\n                    </tr>\r\n                    {showChartModal ?\r\n                        <ChartModal\r\n                            setShowChartModal={setShowChartModal}\r\n                            symbol={symbol}\r\n                        />\r\n                        : null\r\n                    }\r\n                </>\r\n                :\r\n                <tr>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\" colSpan='6'>\r\n                        <HashLoader color={'#6366f1'} css={override} loading={true} size={60} />\r\n                    </td>\r\n                </tr>\r\n            }\r\n        </>\r\n\r\n\r\n    )\r\n};\r\n\r\nexport default StockRow;\r\n\r\n","import { useState } from 'react';\r\n\r\n/**\r\n * \r\n * @todo : [input, setInput] state wasn't working properly. The state wasn't getting updated in input, need to look into that \r\n *          Instead for now, stored the symbol directly in a variable and then used it.\r\n */\r\n\r\nconst Modal = ({ stocks, setStocks }) => {\r\n    const [showModal, setShowModal] = useState(false);\r\n    //const [input, setInput] = useState('');\r\n    const [error, setError] = useState(false);\r\n    const [exists, setExists] = useState(false);\r\n\r\n    const handleSubmit = async (e) => {\r\n        setError(false);\r\n        setExists(false);\r\n        e.preventDefault();\r\n        const data = new FormData(e.target);\r\n        //setInput(`${data.get('symbol')}`)\r\n        var localStocks = JSON.parse(sessionStorage.getItem(\"localStocks\") || \"[]\");\r\n        let stockSymbol = data.get('symbol').toUpperCase();\r\n        const res = await fetch(`/nse/get_quote_info?companyName=${data.get('symbol')}`)\r\n            if(res.ok===true) {\r\n                if((localStocks.find(x => x.name === stockSymbol)===undefined)) {\r\n                    setStocks([\r\n                        ...stocks,\r\n                        {\r\n                            name: stockSymbol\r\n                        },\r\n                    ]);\r\n                    // Trying to persist data in localStorage\r\n                    var singleStock = {\r\n                        name: stockSymbol,\r\n                    };\r\n                    localStocks.push(singleStock);\r\n                    sessionStorage.setItem(\"localStocks\", JSON.stringify(localStocks));\r\n                    window.location.reload();\r\n                    setShowModal(false);\r\n                } else {\r\n                    setExists(true);\r\n                }\r\n                setError(false);\r\n            } else {\r\n                setExists(false);\r\n                setError(true);\r\n            }\r\n\r\n        // setInput(e.target.value);\r\n        // stocks.push({ name: `${data.get('symbol')}`})\r\n    }\r\n    const newModalClick = async (e) => {\r\n        e.preventDefault();\r\n        setShowModal(true);\r\n        setError(false);\r\n        setExists(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <button\r\n                className=\"ml-4 mb-4 inline-flex text-white bg-gray-600 border-0 px-2 focus:outline-none rounded text-lg focus:ring-4 focus:ring-gray-300 ease-linear transition-all duration-150\"\r\n                type=\"button\"\r\n                onClick={newModalClick}\r\n            >\r\n                +\r\n            </button>\r\n            {showModal ? (\r\n                <>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div\r\n                            className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\"\r\n                        >\r\n                            <div className=\"relative w-auto my-6 mx-auto max-w-3xl\">\r\n                                {/*content*/}\r\n                                <div className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\r\n                                    {/*header*/}\r\n                                    {/* <div className=\"flex items-start justify-between p-5 border-b border-solid border-blueGray-200 rounded-t\">\r\n                                    <h3 className=\"text-2xl font-semibold\">\r\n                                        Modal Title\r\n                                    </h3>\r\n                                    <button\r\n                                        className=\"p-1 ml-auto bg-transparent border-0 text-black opacity-5 float-right text-3xl leading-none font-semibold outline-none focus:outline-none\"\r\n                                        onClick={() => setShowModal(false)}\r\n                                    >\r\n                                        <span className=\"bg-transparent text-black opacity-5 h-6 w-6 text-2xl block outline-none focus:outline-none\">\r\n                                            ×\r\n                                        </span>\r\n                                    </button>\r\n                                </div> */}\r\n                                    {/*body*/}\r\n                                    <div className=\"relative p-5 flex-auto\">\r\n                                        <label htmlFor=\"symbol-input\" className=\"text-sm font-medium text-gray-900 block mb-2 dark:text-gray-300\">Symbol</label>\r\n                                        {(error || exists) ? \r\n                                        <input type=\"text\" id=\"symbol-input\" name=\"symbol\" autoComplete=\"off\" className=\"bg-gray-50 border-2 border-red-300 text-gray-900 sm:text-sm rounded-lg focus:ring-red-500 focus:border-red-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" />\r\n                                        : \r\n                                        <input type=\"text\" id=\"symbol-input\" name=\"symbol\" autoComplete=\"off\" className=\"bg-gray-50 border-2 border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-gray-500 focus:border-gray-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" />\r\n                                        }\r\n                                        {error && (\r\n                                            <span className=\"flex items-center font-medium tracking-wide text-red-500 text-xs mt-1 ml-1\">NOT FOUND</span>\r\n                                        )}\r\n                                        {exists ? (\r\n                                            <span className=\"flex items-center font-medium tracking-wide text-red-500 text-xs mt-1 ml-1\">ALREADY EXISTS</span>\r\n                                        ) : null}\r\n                                    </div>\r\n                                    {/*footer*/}\r\n                                    <div className=\"flex items-center justify-end p-4 border-t border-solid border-blueGray-200 rounded-b\">\r\n                                        <button\r\n                                            className=\"bg-white focus:bg-gray-100 text-gray-500 focus:ring-4 focus:ring-gray-300 background-transparent rounded-lg border border-gray-200 uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                                            type=\"button\"\r\n                                            onClick={() => setShowModal(false)}\r\n                                        >\r\n                                            Close\r\n                                        </button>\r\n                                        <button\r\n                                            className=\"bg-gray-700 hover:bg-gray-800 focus:ring-4 focus:ring-gray-400 text-white rounded-lg ml-2 uppercase text-sm px-5 py-2 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                                            type=\"submit\"\r\n                                            // onClick={() => setShowModal(false)}\r\n                                        >\r\n                                            Add to watchlist\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\r\n                    </form>\r\n                </>\r\n            ) : null}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Modal;","import { useState } from 'react'\r\nimport StockRow from './StockRow'\r\nimport Modal from './Modal';\r\n\r\nconst StockTable = () => {\r\n\r\n    const [stocks, setStocks] = useState([]);\r\n    var localStocks = JSON.parse(sessionStorage.getItem(\"localStocks\") || \"[]\");\r\n    return (\r\n        <>\r\n            \r\n            <div className=\"flex justify-end\">\r\n                <Modal stocks={stocks} setStocks={setStocks} />\r\n            </div>\r\n            <div className=\"flex flex-col\">\r\n                <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\r\n                    <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\r\n                        <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\r\n                            <table className=\"min-w-full divide-y divide-gray-200\">\r\n                                <thead className=\"bg-gray-50\">\r\n                                    <tr>\r\n                                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                                            Ticker\r\n                                        </th>\r\n                                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                                            Last Trading Price\r\n                                        </th>\r\n                                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                                            Day change\r\n                                        </th>\r\n                                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                                            Date\r\n                                        </th>\r\n                                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                                            Last Updated\r\n                                        </th>\r\n                                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                                            Chart\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                                    {/* {stocks.map((item) => (\r\n                                        <StockRow key={item.name} symbol={item.name} />\r\n                                    ))} */}\r\n                                    {localStocks.map((item) => (\r\n                                        <StockRow key={item.name} symbol={item.name} />\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\n\r\nexport default StockTable","\r\nimport { Disclosure } from '@headlessui/react'\r\nimport { MenuIcon, XIcon } from '@heroicons/react/outline'\r\nimport { NavLink } from 'react-router-dom';\r\nimport Clock from 'react-live-clock'\r\n\r\nconst navigation = [\r\n  { name: 'Watchlist', href: '/', current: true },\r\n  { name: 'Top Gainers', href: '/gainers', current: false },\r\n  { name: 'Top Losers', href: '/losers', current: false },\r\n]\r\n\r\nconst Header = () => {\r\n\r\n  let inactiveStyle = 'text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium'\r\n  let activeStyle = 'bg-gray-900 text-white px-3 py-2 rounded-md text-sm font-medium'\r\n\r\n  return (\r\n      <Disclosure as=\"nav\" className=\"bg-gray-800\">\r\n        {({ open }) => (\r\n          <>\r\n            <div className=\"max-w-7xl mx-auto px-2 sm:px-6 lg:px-8\">\r\n              <div className=\"relative flex items-center justify-between h-16\">\r\n                <div className=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\r\n                  {/* Mobile menu button*/}\r\n                  <Disclosure.Button className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\">\r\n                    <span className=\"sr-only\">Open main menu</span>\r\n                    {open ? (\r\n                      <XIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\r\n                    ) : (\r\n                      <MenuIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\r\n                    )}\r\n                  </Disclosure.Button>\r\n                </div>\r\n                <div className=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\r\n                  <div className=\"flex-shrink-0 flex items-center\">\r\n                    <img\r\n                      className=\"block lg:hidden h-8 w-auto\"\r\n                      src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-500.svg\"\r\n                      alt=\"Workflow\"\r\n                    />\r\n                    <img\r\n                      className=\"hidden lg:block h-8 w-auto\"\r\n                      src=\"https://tailwindui.com/img/logos/workflow-logo-indigo-500-mark-white-text.svg\"\r\n                      alt=\"Workflow\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"hidden sm:block sm:ml-6\">\r\n                    <div className=\"flex space-x-4\">\r\n                      {navigation.map((item) => (\r\n                        <NavLink\r\n                          key={item.name}\r\n                          to={item.href}\r\n                          // className={classNames(\r\n                          //   item.current ? 'bg-gray-900 text-white' : 'text-gray-300 hover:bg-gray-700 hover:text-white',\r\n                          //   'px-3 py-2 rounded-md text-sm font-medium'\r\n                          // )}\r\n                          className={({ isActive }) =>\r\n                            isActive ? activeStyle : inactiveStyle\r\n                          }\r\n                          aria-current={item.current ? 'page' : undefined}\r\n                        >\r\n                          {item.name}\r\n                        </NavLink>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"hidden sm:flex items-center justify-self-end space-x-4 sm:ml-auto\">\r\n                    <Clock format=\"HH:mm:ss\" interval={1000} ticking={true} style={{color: '#fff'}} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <Disclosure.Panel className=\"sm:hidden\">\r\n              <div className=\"px-2 pt-2 pb-3 space-y-1\">\r\n                {navigation.map((item) => (\r\n                  <Disclosure.Button\r\n                    key={item.name}\r\n                    as=\"NavLink\"\r\n                    to={item.href}\r\n                    className={({ isActive }) =>\r\n                      isActive ? activeStyle : inactiveStyle\r\n                    }\r\n                    aria-current={item.current ? 'page' : undefined}\r\n                  >\r\n                    {item.name}\r\n                  </Disclosure.Button>\r\n                ))}\r\n              </div>\r\n            </Disclosure.Panel>\r\n          </>\r\n        )}\r\n      </Disclosure>\r\n  )\r\n}\r\n\r\nexport default Header;","import styles from './Status.module.css';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst Status = () => {\r\n\r\n    const [response, setResponse] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://stock-screener1.herokuapp.com/nse/get_market_status\")\r\n            .then(resp => resp.json())\r\n            .then(data => setResponse(data.status))\r\n    }, []);\r\n\r\n    if(response === 'open') {\r\n        return (\r\n            <div className={styles.statusOpen}>\r\n                Market Status: {response}\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className={styles.statusClosed}>\r\n                Market Status: {response}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Status;","import { useState, useEffect } from 'react';\r\nimport StockRow from './StockRow';\r\n\r\nconst Gainers = () => {\r\n\r\n    const [response, setResponse] = useState({});\r\n\r\n    useEffect(() => {\r\n        fetch(`/nse/get_gainers`)\r\n            .then(resp => resp.json())\r\n            .then(data => {\r\n                setResponse(data)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"flex flex-col\">\r\n            <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\r\n                <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\r\n                    <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\r\n                        <table className=\"min-w-full divide-y divide-gray-200\">\r\n                            <thead className=\"bg-gray-50\">\r\n                                <tr>\r\n                                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                                        Ticker\r\n                                    </th>\r\n                                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                                        Last Trading Price\r\n                                    </th>\r\n                                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                                        Day change\r\n                                    </th>\r\n                                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                                        Date\r\n                                    </th>\r\n                                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                                        Last Updated\r\n                                    </th>\r\n                                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                                            Chart\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                                {response.data?.map((item) => (\r\n                                    <StockRow \r\n                                    key = {item.symbol}\r\n                                    symbol = {encodeURIComponent(item.symbol)}/>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Gainers;","import { useState, useEffect } from 'react';\r\nimport StockRow from './StockRow';\r\n\r\nconst Losers = () => {\r\n\r\n    const [response, setResponse] = useState({});\r\n\r\n    useEffect(() => {\r\n        fetch(`/nse/get_losers`)\r\n            .then(resp => resp.json())\r\n            .then(data => {\r\n                setResponse(data)\r\n            })\r\n    }, [])\r\n\r\n    console.log(response);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"flex flex-col\">\r\n            <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\r\n                <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\r\n                    <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\r\n                        <table className=\"min-w-full divide-y divide-gray-200\">\r\n                            <thead className=\"bg-gray-50\">\r\n                                <tr>\r\n                                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                                        Ticker\r\n                                    </th>\r\n                                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                                        Last Trading Price\r\n                                    </th>\r\n                                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                                        Day change\r\n                                    </th>\r\n                                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                                        Date\r\n                                    </th>\r\n                                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                                        Last Updated\r\n                                    </th>\r\n                                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                                        Chart\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                                {response.data?.map((item) => (\r\n                                    <StockRow \r\n                                    key = {item.symbol}\r\n                                    symbol = {encodeURIComponent(item.symbol)}/>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Losers;","import './App.css'\r\nimport StockTable from './components/StockTable'\r\nimport Header from './components/Header';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport Status from './components/Status';\r\nimport Gainers from './components/Gainers';\r\nimport Losers from './components/Losers';\r\n\r\nfunction App() {\r\n\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n          <Header />\r\n          <Status />\r\n        <div className=\"spacing\">\r\n          <Routes>\r\n            <Route path='/' element={<StockTable />} />\r\n            <Route path='/gainers' element={<Gainers />} />\r\n            <Route path='/losers' element={<Losers />} />\r\n          </Routes>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}